@model CMSProject.Models.ViewModel.BranchesView
@{ 
    Layout = null;
}

@using (Html.BeginForm("AddOrEditB", "SU", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container-fluid">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BranchID)
        <div class="row justify-content-md-center" style="margin-top: 25px;">
            <div class="col-md-10">
                <div class="form-group">
                    @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Model.BranchID != 0)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.Active, new List<SelectListItem> {
                            new SelectListItem { Text="True", Value="true" },
                            new SelectListItem { Text="False", Value="false" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.Active)
                }
            </div>
        </div>
        <div class="row" style="margin-top: 25px; text-align:center;">
            <div class="form-group col-md-12">
                <input type="submit" value="Create" class="btn btn-outline-dark" />
                <input type="reset" value="Reset" class="btn btn-outline-danger" />
            </div>
        </div>
    </div>
}